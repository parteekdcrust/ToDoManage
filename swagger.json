{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "ToDo Manager Web app",
        "description": "ToDo Manager Web app API"
    },
    "servers": [
        {
            "url": "https://to-do-manage.onrender.com/api",
            "description": "ToDo Manager"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "API for authorization in the system"
        },
        {
            "name": "Task",
            "description": "API for Tasks in the system"
        },
        {
            "name": "User",
            "description": "API for Users in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/auth/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign Up new user in system",
                "description": "Sign Up new user in system",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/Signup"
                        }
                    },
                    "400": {
                        "description": "Error creating user",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in user in system",
                "description": "Log in user in system",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/LoginInput"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User logged in and token generated",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Error logging in user",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user from the system",
                "description": "Logout user from the system",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error logging in user",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/email-otp-verification": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify email through OTP",
                "description": "Verify email through OTP",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/VerifyEmailInput"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Email verified Succesfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in email verification",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "get link to reset password",
                "description": "get link to reset password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ForgotPassInput"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Email verified Succesfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in sending reset link",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "reset password",
                "description": "reset password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ResetPassInput"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "otp",
                        "in": "path",
                        "required": true,
                        "description": "otp to reset password",
                        "type": "number"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Password resetted Succesfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in resetting password",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "change password",
                "description": "change password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ChangePassInput"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Password Changed Succesfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in changing password",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/task": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Task"
                ],
                "summary": "create task",
                "description": "create task",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Task"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating task",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get all tasks",
                "description": "get all tasks",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "schema": {
                            "$ref": "#/definitions/AllTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Error in fetching tasks",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get all tasks",
                "description": "get all tasks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of task to be fetched",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Error in fetching tasks",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Task"
                ],
                "summary": "delete tasks",
                "description": "delete tasks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of task to be fetched",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in deleting tasks",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/task/assign/{id}": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Task"
                ],
                "summary": "assign task",
                "description": "assign task",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/AssignTask"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of task to be assigned",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in creating task",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/task/status/{id}": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Task"
                ],
                "summary": "change status of task",
                "description": "change status of task",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/TaskStatus"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of task to change status",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Task status changed successfully",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in changing status of task",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/admin/user/": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "get all users",
                "description": "get all users",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Allusers fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/AllUserResponse"
                        }
                    },
                    "400": {
                        "description": "Error in fetching users",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/admin/user/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "get a user",
                "description": "get a user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of user to be fetched",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Error in fetching user",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "delete user",
                "description": "delete user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of user to be delete",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user had become In-Active",
                        "schema": {
                            "$ref": "#/definitions/LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Error in deleting user",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "in": "header"
            }
        }
    },
    "definitions": {
        "User": {
            "required": [
                "name",
                "email",
                "password",
                "role"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "AllUserResponse": {
            "type": "array",
            "properties": {
                "$ref": "#/definitions/User"
            }
        },
        "Signup": {
            "required": [
                "id",
                "message"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "AllTaskResponse": {
            "type": "array",
            "properties": {
                "$ref": "#/definitions/Task"
            }
        },
        "Error": {
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "LoginInput": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "AssignTask": {
            "required": [
                "assigneeEmail"
            ],
            "properties": {
                "assigneeEmail": {
                    "type": "string"
                }
            }
        },
        "LoginResponse": {
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "LogoutInput": {
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "TaskStatus": {
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "LogoutResponse": {
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "VerifyEmailInput": {
            "required": [
                "email",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "VerifyMobileInput": {
            "required": [
                "mobile",
                "otp"
            ],
            "properties": {
                "mobile": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "ForgotPassInput": {
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "ResetPassInput": {
            "required": [
                "password","email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ChangePassInput": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "oldPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "Task": {
            "required": [
                "title",
                "description",
                "priority",
                "dueDate"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                }
            }
        }
    }
}